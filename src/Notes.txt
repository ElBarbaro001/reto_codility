Task 1
We consider a number to be lovely if it contains fewer than three instances of any distinct digit
(in decimal representation).

* Examples of lovely numbers: 0, 100, 1232, and 9922
* Examples of numbers that are not lovely: 
        - 1000 (Contains three copies of digit '0')
        - 33533 (Contains four copies of digit '3')

Write a function solution that, given a integers A and B, returns the number of lovely integers in the
range [A,B](both ends included)

Examples:

1. Given
    - A = 0
    - B = 0
your function should return 1, because 0 is lovely.

2. Given    
    - A = 1
    - B = 111
your function should return 110, because the only intger in the range [1... 111] that is not lovely is 111

3. Given
    - A = 100000
    - B = 100000
your function should return 0, because 100000 is not lovely

Assume that 

    * A and B are integers within the range [0... 100000]
    * A <= B

In your solution, focus on correctness. The performance of your solution will not be the focus of the assessment

Task 2

You are given two tables, department and employee, with the following structure

create table department (
    dept_id integer not null,
    dept_name varchar(30) not null,
    dept_location varchar(30) not null,
    unique(dept_id)
);

create table employee (
    emp_id integer not null,
    emp_name varchar(50) not null,
    dept_id integer not null,
    salary integer not null,
    unique(emp_id)
);

Each record in the table department represents a department which might hire some employees. Each 
record in the table employee represents an employee who works for one of the departments from the table
department. The salary of each employee is know. (However, the locations of the departments are not relevant here.)

Write an SQL query that returns a table comprising all the departments (dept_id) in the table department
that hire at least one employee, the number of people they employ and the sum of salaries in each department. The table should be ordered
by dept_id(in increasing order).

For example, for:

    department

    dept_id | dept_name | dept_location
    -----------------------------------
    10      | Accounts  | Delhi
    20      | Marketing | Delhi
    40      | IT        | Warsaw
    30      | Production| Hyderabad
    50      | Sales     | Bengaluru

    employee

    emp_id  | emp_name      | dept_id   | salary
    ----------------------------------------
    1       | Jojo          | 20        | 5000
    2       | Popat Lal     | 30        | 15000
    3       | Santa Singh   | 40        | 25000
    4       | Banta Singh   | 20        | 7500
    5       | Sohan Lal     | 20        | 15000
    6       | Kk            | 10        | 12000
    7       | Bob           | 20        | 35000
    8       | John          | 30        | 25000
    9       | Smith         | 40        | 5000

    Your query should return:

        dept_id | count | sum_of_salary
        --------------------------------
        10      | 1     | 12000 
        20      | 4     | 62500
        30      | 2     | 40000
        40      | 2     | 30000